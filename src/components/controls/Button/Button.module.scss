@use '../../../styles/mixins/button';
@use '../../../styles/variables/breakpoint';

.button {
  $types: primary, secondary, positive, negative;
  @include button.default;
  border-color: var(--button-border-color);

  &:hover {
    border-color: var(--button-border-color-hover);
  }

  &:focus {
    border-color: var(--button-border-color-focus);
  }

  &:active {
    position: relative;
    top: 1px;
  }

  &--loading,
  &[disabled] {
    background: var(--button-background-disabled);
    border-color: var(--button-border-color-disabled);
    color: var(--button-color-disabled);
    pointer-events: none;
  }

  &--icon {
    aspect-ratio: 1;
    line-height: var(--font-line-height);
    min-height: 0;
    min-width: 0;
    padding: var(--spacing-xs) var(--spacing-sm);
  }

  &--block {
    display: block;
    width: 100%;

    &-mobile {
      display: block;
      width: 100%;

      @media (min-width: breakpoint.$md) {
        display: inline-block;
        width: auto;
      }
    }
  }

  &--small {
    min-height: 2.25rem;
    min-width: 5.5rem;
    padding: calc(var(--spacing-xs) - var(--button-border-width))
      var(--spacing-sm);
  }

  @each $type in $types {
    &--#{$type} {
      background: var(--button-background-#{$type});
      border-color: var(--button-border-color-#{$type});
      color: var(--button-color-#{$type});

      &:hover {
        background: var(--button-background-hover-#{$type});
        border-color: var(--button-border-color-hover-#{$type});
        color: var(--button-color-hover-#{$type});
      }

      &:focus-within {
        background: var(--button-background-focus-#{$type});
        border-color: var(--button-border-color-focus-#{$type});
        color: var(--button-color-focus-#{$type});
      }

      &.button--loading,
      &[disabled] {
        background: var(--button-background-disabled-#{$type});
        border-color: var(--button-border-color-disabled-#{$type});
        color: var(--button-color-disabled-#{$type});
      }
    }
  }
}
